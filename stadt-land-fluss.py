import streamlit as st

#JSON Daten
import requests
import json

#Random String
import random
import string

#Daten abrufen
url = "https://slftool.github.io/data.json"
response = requests.get(url)
data = response.json()
#print(data)

st.title("StadtÔ∏è - Land - Fluss - ...")
st.link_button("Daten von slftool", "https://github.com/slftool/slftool.github.io")

st.divider()

#Toggle
#st.write(st.session_state)
if "zeigen" not in st.session_state:
    st.session_state.zeigen = False
    
if "buchstabe" not in st.session_state:
    st.session_state.buchstabe = "a"
    
if "punkte" not in st.session_state:
    st.session_state.punkte = 0

def toggle():
    if st.session_state.zeigen == True:
        st.session_state.zeigen = False
    else:
        st.session_state.zeigen = True


#Auswahl der Kategorien
kategorien = ["Stadt", "Land", "Fluss", "Name", "Beruf", "Tier", "Marke", "Pflanze"]
auswahl = st.segmented_control(
    "Kategorien", kategorien, selection_mode="multi", default=["Stadt","Land","Fluss"])
st.session_state['auswahl'] = auswahl
#st.markdown(f"Auswahl: {auswahl}.")


#√úberpr√ºfen ob ausreichend Kategorien ausgew√§hlt sind
if len(auswahl) < 3:
    st.write("Du musst mehr drei Elemente ausw√§hlen")
else:
    #Button der Zuf√§llig einen Buchstaben ausw√§hlt
    if st.button("W√§hle einen zuf√§lligen Buchstaben!", type="primary", on_click = toggle):
        st.session_state['buchstabe'] = random.choice(string.ascii_lowercase)


if st.session_state.zeigen == True:
    
    st.markdown(f"# Der Buchstabe ist ... {st.session_state.buchstabe.upper()}")

    pruefen = []
    st.session_state.pruefen = pruefen

    #Text Inputs f√ºr Auswahl erzeugen und Eingaben in Liste speichern
    for i in range(len(auswahl)):
        eingabe = st.text_input(auswahl[i], key = i)
        pruefen.append(eingabe)

    if st.button("√úberpr√ºfen?", type="primary"):
                
        #√úber alle Ausgew√§hlten Kategorien (Stadt, Land, Fluss,..)
        for j in range(len(st.session_state.auswahl)):
            
            zaehler = 0
            
            #√úber jedes Element welches in der Kategorie ist
            for k in range(len(data.get(st.session_state.buchstabe).get(st.session_state.auswahl[j].lower()))):
                #Klammer bei der json entfernen
                mitKlammer = data.get(st.session_state.buchstabe).get(st.session_state.auswahl[j].lower())[k]
                ohneKlammer = mitKlammer.split('(')[0].strip()
                
                #Eingegebene L√∂sung mit dem der json vergleichen
                #1 - Wenn keine Eingabe
                if st.session_state.pruefen[j].lower() == "":
                    st.error(f"{st.session_state.auswahl[j]} ohne Eingabe ...", icon="üö®")
                    break
                #2 - Wenn Eingabe korrekt
                if st.session_state.pruefen[j].lower() == ohneKlammer.lower():
                    st.success(f"{st.session_state.auswahl[j]}: {ohneKlammer} ist richtig! + 1Ô∏è‚É£ Punkt", icon="üî•")
                    st.session_state.punkte += 1
                else:
                #3 - Wenn Eingabe falsch    
                    #Z√§hlt die Fehler pro Kategorie
                    zaehler = zaehler + 1
                    #Wenn Falsche == Anzahl der Eintr√§ge pro Kategorie
                    if zaehler == len(data.get(st.session_state.buchstabe).get(st.session_state.auswahl[j].lower())):
                        st.warning(f"{st.session_state.auswahl[j]}: {st.session_state.pruefen[j]} ist leider falsch..", icon="‚ùå")

        st.info(f"Du hast: {st.session_state.punkte} Punkt(e)", icon="‚ÑπÔ∏è")



#erste Eingabe    
#st.write(st.session_state.pruefen[0])

#Entsprechende Elemente pr√ºfen
#st.write(data.get("a").get("stadt")[0])

#Alle Daten f√ºr den entsprechenden Buchstaben
#st.write(data.get(st.session_state.buchstabe))

#Anzahl der Ausgew√§hlten Elementes
#st.write(len(st.session_state.auswahl))

#Anzahl der ausgew√§hlten Kategorie
#st.write(len(data.get(st.session_state.buchstabe).get(st.session_state.auswahl[0].lower())))








